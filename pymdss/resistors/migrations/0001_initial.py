# Generated by Django 5.0.4 on 2024-05-16 08:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filename", models.CharField(db_column="Filename", max_length=100)),
                (
                    "description",
                    models.TextField(blank=True, db_column="File Description"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="filename",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_uploaded", models.CharField(blank=True, max_length=100)),
                ("uploaded_filename", models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="HR3100_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=10),
                ),
                (
                    "data_filename",
                    models.TextField(blank=True, db_column="DataFilename"),
                ),
                (
                    "ccc_components",
                    models.TextField(blank=True, db_column="CCC Components"),
                ),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "meas_voltage",
                    models.FloatField(blank=True, db_column="MeasVoltage"),
                ),
                ("meas_delay", models.FloatField(blank=True, db_column="Meas Delay")),
                (
                    "ccc_nom_ratio",
                    models.CharField(
                        blank=True, db_column="CCC Nom Ratio", max_length=10
                    ),
                ),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=20),
                ),
                ("ccc_deltaT", models.FloatField(blank=True, db_column="CCC deltaT")),
                ("ccc_deltaR", models.FloatField(blank=True, db_column="CCC deltaR")),
                ("c", models.FloatField(blank=True, db_column="C Average")),
                ("sd_c_field", models.FloatField(blank=True, db_column="SD (C)")),
                ("pred_c_field", models.FloatField(blank=True, db_column="Pred (C)")),
                (
                    "reference_sn",
                    models.CharField(
                        blank=True, db_column="Reference SN", max_length=45
                    ),
                ),
                ("meassets", models.IntegerField(blank=True, db_column="MeasSets")),
                ("ccc_r", models.FloatField(blank=True, db_column="CCC R")),
                ("ccc_r_w1", models.FloatField(blank=True, db_column="CCC R w1")),
                ("ccc_r_w2", models.FloatField(blank=True, db_column="CCC R w2")),
                ("meas_temp", models.FloatField(blank=True, db_column="Meas Temp")),
                ("meas_temp_2", models.FloatField(blank=True, db_column="Meas Temp 2")),
                ("c1", models.FloatField(blank=True, db_column="C1")),
                ("sd_c1", models.FloatField(blank=True, db_column="SD C1")),
                ("c2", models.FloatField(blank=True, db_column="C2")),
                ("sd_c2", models.FloatField(blank=True, db_column="SD C2")),
                ("dvm_nplc", models.FloatField(blank=True, db_column="DVM NPLC")),
                (
                    "dvm_readings",
                    models.IntegerField(blank=True, db_column="DVM readings"),
                ),
                (
                    "ccc_timing",
                    models.CharField(blank=True, db_column="CCC Timing", max_length=50),
                ),
                ("ccc_i_fb1", models.FloatField(blank=True, db_column="CCC I FB1")),
                ("ccc_i_fb2", models.FloatField(blank=True, db_column="CCC I FB2")),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
            options={
                "db_table_comment": "Database for HR3100 Process",
            },
        ),
        migrations.CreateModel(
            name="Magnicon_CCC_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "end_time",
                    models.CharField(blank=True, db_column="End Time", max_length=100),
                ),
                (
                    "ccc_primary_current",
                    models.FloatField(blank=True, db_column="CCC Primary Current"),
                ),
                ("cycle_time", models.FloatField(blank=True, db_column="Cycle Time")),
                (
                    "ccc_nominal_ratio",
                    models.CharField(
                        blank=True, db_column="CCC Nominal Ratio", max_length=16
                    ),
                ),
                (
                    "reference_sn",
                    models.CharField(
                        blank=True, db_column="Reference SN", max_length=45
                    ),
                ),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=45),
                ),
                ("c", models.FloatField(blank=True, db_column="C")),
                ("sd_c_field", models.FloatField(blank=True, db_column="SD (C)")),
                ("pred_c_field", models.FloatField(blank=True, db_column="Pred (C)")),
                ("ccc_r", models.FloatField(blank=True, db_column="CCC R")),
                ("meassets", models.IntegerField(blank=True, db_column="MeasSets")),
                ("pressure", models.FloatField(blank=True, db_column="Pressure")),
                ("ref_temp", models.FloatField(blank=True, db_column="Ref Temp")),
                ("meas_temp", models.FloatField(blank=True, db_column="Unknown Temp")),
                ("c1", models.FloatField(blank=True, db_column="C1")),
                ("c2", models.FloatField(blank=True, db_column="C2")),
                ("ccc_deltar", models.FloatField(blank=True, db_column="CCC deltaR")),
                ("sd_c1_field", models.FloatField(blank=True, db_column="SD (C1)")),
                ("sd_c2_field", models.FloatField(blank=True, db_column="SD (C2)")),
                ("samples", models.FloatField(blank=True, db_column="Samples")),
                (
                    "samples_used",
                    models.FloatField(blank=True, db_column="Samples Used"),
                ),
                (
                    "ccc_timing",
                    models.CharField(blank=True, db_column="CCC Timing", max_length=45),
                ),
                (
                    "ref_corrected",
                    models.FloatField(blank=True, db_column="Ref Corrected"),
                ),
                ("comments", models.TextField(blank=True, db_column="Comments")),
                ("ref_pcr", models.FloatField(blank=True, db_column="Ref PCR")),
                ("ref_tcr", models.FloatField(blank=True, db_column="Ref TCR")),
                (
                    "ref_tcr_beta",
                    models.FloatField(blank=True, db_column="Ref TCR Beta"),
                ),
                ("unknown_pcr", models.FloatField(blank=True, db_column="Unknown PCR")),
                ("unknown_tcr", models.FloatField(blank=True, db_column="Unknown TCR")),
                (
                    "unknown_tcr_beta",
                    models.FloatField(blank=True, db_column="Unknown TCR Beta"),
                ),
                ("guard", models.FloatField(blank=True, db_column="Guard")),
                ("ccc_bvd", models.FloatField(blank=True, db_column="CCC BVD")),
                (
                    "ccc_feedback_type",
                    models.CharField(
                        blank=True, db_column="CCC Feedback type", max_length=50
                    ),
                ),
                ("ccc_feedin", models.FloatField(blank=True, db_column="CCC Feedin")),
                (
                    "external_power",
                    models.CharField(
                        blank=True, db_column="External Power", max_length=5
                    ),
                ),
                ("room_rh", models.FloatField(blank=True, db_column="Room RH")),
                (
                    "magnicon_com_temp",
                    models.FloatField(blank=True, db_column="Magnicon com temp"),
                ),
                (
                    "magnicon_cn_temp",
                    models.FloatField(blank=True, db_column="Magnicon cn temp"),
                ),
                (
                    "magnicon_nv_temp",
                    models.FloatField(blank=True, db_column="Magnicon nv temp"),
                ),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=100),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="MI_6000B_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "end_time",
                    models.CharField(blank=True, db_column="End Time", max_length=100),
                ),
                (
                    "meas_voltage",
                    models.FloatField(blank=True, db_column="Meas Voltage"),
                ),
                ("meas_delay", models.FloatField(blank=True, db_column="Meas Delay")),
                ("meas_temp", models.FloatField(blank=True, db_column="Meas Temp")),
                (
                    "reference_sn",
                    models.CharField(
                        blank=True, db_column="Reference SN", max_length=45
                    ),
                ),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=20),
                ),
                ("ratio", models.FloatField(blank=True, db_column="Ratio")),
                ("sd_c_field", models.FloatField(blank=True, db_column="SD (C)")),
                (
                    "mi_stats",
                    models.CharField(blank=True, db_column="MI Stats", max_length=20),
                ),
                ("r", models.FloatField(blank=True, db_column=" R")),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=10),
                ),
                ("comments", models.TextField(blank=True, db_column="Comments")),
                ("dvm_nplc", models.IntegerField(blank=True, db_column="DVM NPLC")),
                (
                    "dvm_readings",
                    models.IntegerField(blank=True, db_column="DVM Readings"),
                ),
                (
                    "source_voltage",
                    models.FloatField(blank=True, db_column="Source Voltage"),
                ),
                (
                    "mi_range",
                    models.CharField(blank=True, db_column="MI Range", max_length=50),
                ),
                ("mi_channels", models.TextField(blank=True, db_column="MI Channels")),
                (
                    "mi_components",
                    models.TextField(blank=True, db_column="MI Components"),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
            options={
                "db_table_comment": "Database for MI 6000B Process",
            },
        ),
        migrations.CreateModel(
            name="MI_6010B_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "end_time",
                    models.CharField(blank=True, db_column="End Time", max_length=100),
                ),
                (
                    "meas_current",
                    models.FloatField(blank=True, db_column="Meas Current"),
                ),
                ("meas_delay", models.FloatField(blank=True, db_column="Meas Delay")),
                ("meas_temp", models.FloatField(blank=True, db_column="Meas Temp")),
                (
                    "reference_sn",
                    models.CharField(
                        blank=True, db_column="Reference SN", max_length=45
                    ),
                ),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=20),
                ),
                ("ratio", models.FloatField(blank=True, db_column="Ratio")),
                ("sd_c_field", models.FloatField(blank=True, db_column="SD (C)")),
                (
                    "mi_stats",
                    models.CharField(blank=True, db_column="MI Stats", max_length=20),
                ),
                ("r", models.FloatField(blank=True, db_column=" R")),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=10),
                ),
                ("comments", models.TextField(blank=True, db_column="Comments")),
                (
                    "mi_range",
                    models.CharField(blank=True, db_column="MI Range", max_length=50),
                ),
                ("mi_channels", models.TextField(blank=True, db_column="MI Channels")),
                (
                    "mi_components",
                    models.TextField(blank=True, db_column="MI Components"),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="MI_6010C_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "end_time",
                    models.CharField(blank=True, db_column="End Time", max_length=100),
                ),
                (
                    "meas_current",
                    models.FloatField(blank=True, db_column="Meas Current"),
                ),
                ("meas_delay", models.FloatField(blank=True, db_column="Meas Delay")),
                ("meas_temp", models.FloatField(blank=True, db_column="Meas Temp")),
                (
                    "reference_sn",
                    models.CharField(
                        blank=True, db_column="Reference SN", max_length=45
                    ),
                ),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=20),
                ),
                ("ratio", models.FloatField(blank=True, db_column="Ratio")),
                ("sd_c_field", models.FloatField(blank=True, db_column="SD (C)")),
                (
                    "mi_stats",
                    models.CharField(blank=True, db_column="MI Stats", max_length=20),
                ),
                ("r", models.FloatField(blank=True, db_column=" R")),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=10),
                ),
                ("comments", models.TextField(blank=True, db_column="Comments")),
                (
                    "mi_range",
                    models.CharField(blank=True, db_column="MI Range", max_length=50),
                ),
                ("mi_channels", models.TextField(blank=True, db_column="MI Channels")),
                (
                    "mi_components",
                    models.TextField(blank=True, db_column="MI Components"),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="MI_6010Q_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "end_time",
                    models.CharField(blank=True, db_column="End Time", max_length=100),
                ),
                (
                    "meas_current",
                    models.FloatField(blank=True, db_column="Meas Current"),
                ),
                ("meas_delay", models.FloatField(blank=True, db_column="Meas Delay")),
                ("meas_temp", models.FloatField(blank=True, db_column="Meas Temp")),
                (
                    "reference_sn",
                    models.CharField(
                        blank=True, db_column="Reference SN", max_length=45
                    ),
                ),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=20),
                ),
                ("ratio", models.FloatField(blank=True, db_column="Ratio")),
                ("sd_c_field", models.FloatField(blank=True, db_column="SD (C)")),
                (
                    "mi_stats",
                    models.CharField(blank=True, db_column="MI Stats", max_length=20),
                ),
                ("r", models.FloatField(blank=True, db_column=" R")),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=10),
                ),
                ("comments", models.TextField(blank=True, db_column="Comments")),
                (
                    "mi_range",
                    models.CharField(blank=True, db_column="MI Range", max_length=50),
                ),
                ("mi_channels", models.TextField(blank=True, db_column="MI Channels")),
                (
                    "mi_components",
                    models.TextField(blank=True, db_column="MI Components"),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
            options={
                "db_table_comment": "Database for MI 6010Q Process",
            },
        ),
        migrations.CreateModel(
            name="MI_6010SW_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "end_time",
                    models.CharField(blank=True, db_column="End Time", max_length=100),
                ),
                (
                    "meas_current",
                    models.FloatField(blank=True, db_column="Meas Current"),
                ),
                ("meas_delay", models.FloatField(blank=True, db_column="Meas Delay")),
                ("meas_temp", models.FloatField(blank=True, db_column="Meas Temp")),
                (
                    "reference_sn",
                    models.CharField(
                        blank=True, db_column="Reference SN", max_length=45
                    ),
                ),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=20),
                ),
                ("ratio", models.FloatField(blank=True, db_column="Ratio")),
                ("sd_c_field", models.FloatField(blank=True, db_column="SD (C)")),
                (
                    "mi_stats",
                    models.CharField(blank=True, db_column="MI Stats", max_length=20),
                ),
                ("r", models.FloatField(blank=True, db_column=" R")),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=10),
                ),
                ("comments", models.TextField(blank=True, db_column="Comments")),
                (
                    "mi_range",
                    models.CharField(blank=True, db_column="MI Range", max_length=50),
                ),
                ("mi_channels", models.TextField(blank=True, db_column="MI Channels")),
                (
                    "mi_components",
                    models.TextField(blank=True, db_column="MI Components"),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
            options={
                "db_table_comment": "Database for MI 6010SW Process",
            },
        ),
        migrations.CreateModel(
            name="MI_6020Q_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "end_time",
                    models.CharField(blank=True, db_column="End Time", max_length=100),
                ),
                (
                    "meas_current",
                    models.FloatField(blank=True, db_column="Meas Current"),
                ),
                ("meas_delay", models.FloatField(blank=True, db_column="Meas Delay")),
                ("meas_temp", models.FloatField(blank=True, db_column="Meas Temp")),
                (
                    "reference_sn",
                    models.CharField(
                        blank=True, db_column="Reference SN", max_length=45
                    ),
                ),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=20),
                ),
                ("ratio", models.FloatField(blank=True, db_column="Ratio")),
                ("sd_c_field", models.FloatField(blank=True, db_column="SD (C)")),
                (
                    "mi_stats",
                    models.CharField(blank=True, db_column="MI Stats", max_length=20),
                ),
                ("r", models.FloatField(blank=True, db_column=" R")),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=10),
                ),
                ("comments", models.TextField(blank=True, db_column="Comments")),
                (
                    "mi_range",
                    models.CharField(blank=True, db_column="MI Range", max_length=50),
                ),
                ("mi_channels", models.TextField(blank=True, db_column="MI Channels")),
                (
                    "mi_components",
                    models.TextField(blank=True, db_column="MI Components"),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
            options={
                "db_table_comment": "Database for MI 6020Q Process",
            },
        ),
        migrations.CreateModel(
            name="NIST_AAB_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "date_decimal",
                    models.FloatField(blank=True, db_column="Date Decimal"),
                ),
                (
                    "meas_voltage",
                    models.FloatField(blank=True, db_column="Meas Voltage"),
                ),
                ("meas_delay", models.FloatField(blank=True, db_column="Meas Delay")),
                (
                    "meas_position",
                    models.FloatField(blank=True, db_column="Meas Position"),
                ),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=20),
                ),
                (
                    "meas_function",
                    models.CharField(
                        blank=True, db_column="Meas Function", max_length=5
                    ),
                ),
                ("ratio", models.FloatField(blank=True, db_column="Ratio")),
                ("c", models.FloatField(blank=True, db_column="C")),
                ("pred_c_field", models.FloatField(blank=True, db_column="Pred (C)")),
                (
                    "reference_sn",
                    models.CharField(
                        blank=True, db_column="Reference SN", max_length=45
                    ),
                ),
                (
                    "dummy",
                    models.CharField(blank=True, db_column="Dummy", max_length=100),
                ),
                (
                    "aab_method",
                    models.CharField(
                        blank=True, db_column="AAB Method", max_length=100
                    ),
                ),
                (
                    "aab_location",
                    models.CharField(
                        blank=True, db_column="AAB Location", max_length=100
                    ),
                ),
                ("meas_temp", models.FloatField(blank=True, db_column="Meas Temp")),
                ("rh", models.FloatField(blank=True, db_column="RH")),
                (
                    "thermistor_r",
                    models.FloatField(blank=True, db_column="Thermistor R"),
                ),
                ("left_temp", models.FloatField(blank=True, db_column="Left Temp")),
                ("right_temp", models.FloatField(blank=True, db_column="Right Temp")),
                ("room_temp", models.FloatField(blank=True, db_column="Room Temp")),
                ("left_rh", models.FloatField(blank=True, db_column="Left RH")),
                ("right_rh", models.FloatField(blank=True, db_column="Right RH")),
                ("room_rh", models.FloatField(blank=True, db_column="Room RH")),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=5),
                ),
                (
                    "data_filename",
                    models.CharField(
                        blank=True, db_column="Data Filename", max_length=100
                    ),
                ),
                (
                    "aab_calibrator_1",
                    models.CharField(
                        blank=True, db_column="AAB Calibrator 1", max_length=20
                    ),
                ),
                (
                    "aab_calibrator_2",
                    models.CharField(
                        blank=True, db_column="AAB Calibrator 2", max_length=20
                    ),
                ),
                (
                    "aab_detector",
                    models.CharField(
                        blank=True, db_column="AAB Detector", max_length=20
                    ),
                ),
                (
                    "aab_scanner",
                    models.CharField(
                        blank=True, db_column="AAB Scanner", max_length=20
                    ),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="Scaling_CCC_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=10),
                ),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "ccc_primary_current",
                    models.FloatField(blank=True, db_column="CCC Primary Current"),
                ),
                ("meas_delay", models.FloatField(blank=True, db_column="Meas Delay")),
                (
                    "ccc_nom_ratio",
                    models.CharField(
                        blank=True, db_column="CCC Nom Ratio", max_length=10
                    ),
                ),
                ("comments", models.TextField(blank=True, db_column="Comments")),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=20),
                ),
                ("c", models.FloatField(blank=True, db_column="C")),
                ("sd_c_field", models.FloatField(blank=True, db_column="SD (C)")),
                ("pred_c_field", models.FloatField(blank=True, db_column="Pred (C)")),
                (
                    "reference_sn",
                    models.CharField(
                        blank=True, db_column="Reference SN", max_length=45
                    ),
                ),
                ("ccc_r", models.FloatField(blank=True, db_column="CCC R")),
                ("meassets", models.IntegerField(blank=True, db_column="MeasSets")),
                ("pressure", models.FloatField(blank=True, db_column="Pressure")),
                ("meas_temp", models.FloatField(blank=True, db_column="Meas Temp")),
                ("meas_temp_2", models.FloatField(blank=True, db_column="Meas Temp 2")),
                ("dvm_nplc", models.FloatField(blank=True, db_column="DVM NPLC")),
                (
                    "dvm_readings",
                    models.IntegerField(blank=True, db_column="DVM readings"),
                ),
                (
                    "ccc_timing",
                    models.CharField(blank=True, db_column="CCC Timing", max_length=45),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
            options={
                "db_table_comment": "Database for Scaling CCC Process",
            },
        ),
        migrations.CreateModel(
            name="search_standard_resistor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "serial",
                    models.CharField(
                        blank=True,
                        db_column="Serial",
                        help_text="Serial number of the standard",
                        max_length=20,
                    ),
                ),
                (
                    "model_no",
                    models.CharField(blank=True, db_column="Model", max_length=20),
                ),
                (
                    "std_manufacturer",
                    models.CharField(
                        blank=True, db_column="Standard Manufacturer", max_length=20
                    ),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service Id", max_length=20),
                ),
                (
                    "process_name",
                    models.CharField(
                        blank=True, db_column="Process name", max_length=30
                    ),
                ),
                (
                    "format",
                    models.CharField(blank=True, db_column="Format", max_length=10),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Thomas_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                ("comments", models.TextField(blank=True, db_column="Comments")),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "meas_voltage",
                    models.FloatField(blank=True, db_column="Meas Voltage"),
                ),
                ("dummy", models.FloatField(blank=True, db_column="Dummy")),
                (
                    "meas_position",
                    models.FloatField(blank=True, db_column="Meas Position"),
                ),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=20),
                ),
                (
                    "meas_function",
                    models.CharField(
                        blank=True, db_column="Meas Function", max_length=5
                    ),
                ),
                ("c", models.FloatField(blank=True, db_column="C")),
                ("sd_c_field", models.FloatField(blank=True, db_column="SD (C)")),
                ("pred_c_field", models.FloatField(blank=True, db_column="Pred (C)")),
                ("meas_temp", models.FloatField(blank=True, db_column="Meas Temp")),
                ("room_rh", models.FloatField(blank=True, db_column="RH")),
                ("pressure", models.FloatField(blank=True, db_column="Pressure")),
                ("sense_avg", models.FloatField(blank=True, db_column="Sens Avg")),
                ("sensitivity", models.FloatField(blank=True, db_column="Sensitivity")),
                ("oil_depth", models.FloatField(blank=True, db_column="Oil Depth")),
                ("c_pred", models.FloatField(blank=True, db_column="C-Pred")),
                ("range", models.FloatField(blank=True, db_column="Range")),
                ("ref_tcr", models.FloatField(blank=True, db_column="TCR Corr")),
                ("ref_pcr", models.FloatField(blank=True, db_column="PCR Corr")),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=100),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
            options={
                "db_table_comment": "Database for Scaling CCC Process",
            },
        ),
        migrations.CreateModel(
            name="Warshawsky_Process",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nominal", models.FloatField(blank=True, db_column="Nominal")),
                (
                    "comments",
                    models.CharField(blank=True, db_column="Comments", max_length=200),
                ),
                (
                    "date",
                    models.CharField(blank=True, db_column="Date", max_length=100),
                ),
                (
                    "meas_voltage",
                    models.FloatField(blank=True, db_column="Meas Voltage"),
                ),
                ("dummy", models.FloatField(blank=True, db_column="Dummy")),
                (
                    "meas_position",
                    models.FloatField(blank=True, db_column="Meas Position"),
                ),
                (
                    "serial",
                    models.CharField(blank=True, db_column="Serial", max_length=20),
                ),
                (
                    "meas_function",
                    models.CharField(
                        blank=True, db_column="Meas Function", max_length=5
                    ),
                ),
                ("c", models.FloatField(blank=True, db_column="C")),
                ("sd_c_field", models.FloatField(blank=True, db_column="SD (C)")),
                ("pred_c_field", models.FloatField(blank=True, db_column="Pred (C)")),
                ("meas_temp", models.FloatField(blank=True, db_column="Meas Temp")),
                ("room_rh", models.FloatField(blank=True, db_column="RH")),
                ("pressure", models.FloatField(blank=True, db_column="Pressure")),
                ("sense_avg", models.FloatField(blank=True, db_column="Sens Avg")),
                ("sensitivity", models.FloatField(blank=True, db_column="Sensitivity")),
                ("guard", models.FloatField(blank=True, db_column="Guard")),
                ("c_pred", models.FloatField(blank=True, db_column="C-Pred")),
                ("range", models.FloatField(blank=True, db_column="Range")),
                ("ref_tcr", models.FloatField(blank=True, db_column="TCR Corr")),
                ("ref_pcr", models.FloatField(blank=True, db_column="PCR Corr")),
                (
                    "system_id",
                    models.CharField(blank=True, db_column="System ID", max_length=100),
                ),
                (
                    "service_id",
                    models.CharField(blank=True, db_column="Service ID", max_length=20),
                ),
                (
                    "process",
                    models.CharField(blank=True, db_column="Process", max_length=100),
                ),
                ("area", models.CharField(blank=True, db_column="Area", max_length=20)),
            ],
        ),
    ]
