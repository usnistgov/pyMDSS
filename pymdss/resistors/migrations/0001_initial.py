# Generated by Django 4.0.1 on 2022-02-02 17:53

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(db_column='Filename', max_length=100)),
                ('description', models.CharField(db_column='File Description', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='magnicon_ccc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nominal', models.FloatField(blank=True, db_column='Nominal')),
                ('date', models.CharField(blank=True, db_column='Date', max_length=100)),
                ('end_time', models.CharField(blank=True, db_column='End Time', max_length=100)),
                ('ccc_primary_current', models.FloatField(blank=True, db_column='CCC Primary Current')),
                ('cycle_time', models.FloatField(blank=True, db_column='Cycle Time')),
                ('ccc_nominal_ratio', models.CharField(blank=True, db_column='CCC Nominal Ratio', max_length=16)),
                ('reference_sn', models.CharField(blank=True, db_column='Reference SN', max_length=45)),
                ('serial', models.CharField(blank=True, db_column='Serial', max_length=45)),
                ('c', models.FloatField(blank=True, db_column='C')),
                ('sd_c_field', models.FloatField(blank=True, db_column='SD (C)')),
                ('pred_c_field', models.FloatField(blank=True, db_column='Pred (C)')),
                ('ccc_r', models.FloatField(blank=True, db_column='CCC R')),
                ('meassets', models.IntegerField(blank=True, db_column='MeasSets')),
                ('pressure', models.FloatField(blank=True, db_column='Pressure')),
                ('ref_temp', models.FloatField(blank=True, db_column='Ref Temp')),
                ('unknown_temp', models.FloatField(blank=True, db_column='Unknown Temp')),
                ('c1', models.FloatField(blank=True, db_column='C1')),
                ('c2', models.FloatField(blank=True, db_column='C2')),
                ('ccc_deltar', models.FloatField(blank=True, db_column='CCC deltaR')),
                ('sd_c1_field', models.FloatField(blank=True, db_column='SD (C1)')),
                ('sd_c2_field', models.FloatField(blank=True, db_column='SD (C2)')),
                ('samples', models.FloatField(blank=True, db_column='Samples')),
                ('samples_used', models.FloatField(blank=True, db_column='Samples Used')),
                ('ccc_timing', models.CharField(blank=True, db_column='CCC Timing', max_length=45)),
                ('ref_corrected', models.FloatField(blank=True, db_column='Ref Corrected')),
                ('comments', models.CharField(blank=True, db_column='Comments', max_length=200)),
                ('ref_pcr', models.FloatField(blank=True, db_column='Ref PCR')),
                ('ref_tcr', models.FloatField(blank=True, db_column='Ref TCR')),
                ('ref_tcr_beta', models.FloatField(blank=True, db_column='Ref TCR Beta')),
                ('unknown_pcr', models.FloatField(blank=True, db_column='Unknown PCR')),
                ('unknown_tcr', models.FloatField(blank=True, db_column='Unknown TCR')),
                ('unknown_tcr_beta', models.FloatField(blank=True, db_column='Unknown TCR Beta')),
                ('guard', models.FloatField(blank=True, db_column='Guard')),
                ('ccc_bvd', models.FloatField(blank=True, db_column='CCC BVD')),
                ('ccc_feedback_type', models.CharField(blank=True, db_column='CCC Feedback type', max_length=20)),
                ('ccc_feedin', models.FloatField(blank=True, db_column='CCC Feedin')),
                ('external_power', models.CharField(blank=True, db_column='External Power', max_length=5)),
                ('room_rh', models.FloatField(blank=True, db_column='Room RH')),
                ('magnicon_com_temp', models.FloatField(blank=True, db_column='Magnicon com temp')),
                ('magnicon_cn_temp', models.FloatField(blank=True, db_column='Magnicon cn temp')),
                ('magnicon_nv_temp', models.FloatField(blank=True, db_column='Magnicon nv temp')),
                ('system_id', models.CharField(blank=True, db_column='System ID', max_length=100)),
                ('service_id', models.CharField(blank=True, db_column='Service ID', max_length=20)),
                ('process', models.CharField(blank=True, db_column='Process', max_length=100)),
                ('area', models.CharField(blank=True, db_column='Area', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='search_standard_resistor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.CharField(db_column='Filename', max_length=100)),
                ('model_no', models.CharField(db_column='Model', max_length=100)),
                ('std_manufacturer', models.CharField(db_column='Standard Manufacturer', max_length=100)),
                ('service_id', models.CharField(db_column='Service Id', max_length=100)),
                ('process_name', models.CharField(db_column='Process name', max_length=100)),
                ('format', models.CharField(db_column='Format', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='thomas_dcc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nominal', models.FloatField(blank=True, db_column='Nominal')),
                ('comments', models.CharField(blank=True, db_column='Comments', max_length=200)),
                ('date', models.CharField(blank=True, db_column='Date', max_length=100)),
                ('meas_voltage', models.FloatField(blank=True, db_column='Meas Voltage')),
                ('dummy', models.FloatField(blank=True, db_column='Dummy')),
                ('meas_position', models.FloatField(blank=True, db_column='Meas Position')),
                ('serial', models.CharField(blank=True, db_column='Serial', max_length=20)),
                ('meas_function', models.CharField(blank=True, db_column='Meas Function', max_length=5)),
                ('c', models.FloatField(blank=True, db_column='C')),
                ('sd_c_field', models.FloatField(blank=True, db_column='SD (C)')),
                ('pred_c_field', models.FloatField(blank=True, db_column='Pred (C)')),
                ('unknown_temp', models.FloatField(blank=True, db_column='Meas Temp')),
                ('room_rh', models.FloatField(blank=True, db_column='RH')),
                ('pressure', models.FloatField(blank=True, db_column='Pressure')),
                ('sense_avg', models.FloatField(blank=True, db_column='Sens Avg')),
                ('sensitivity', models.FloatField(blank=True, db_column='Sensitivity')),
                ('oil_depth', models.FloatField(blank=True, db_column='Oil Depth')),
                ('c_pred', models.FloatField(blank=True, db_column='C-Pred')),
                ('range', models.FloatField(blank=True, db_column='Range')),
                ('ref_tcr', models.FloatField(blank=True, db_column='TCR Corr')),
                ('ref_pcr', models.FloatField(blank=True, db_column='PCR Corr')),
                ('system_id', models.CharField(blank=True, db_column='System ID', max_length=100)),
                ('service_id', models.CharField(blank=True, db_column='Service ID', max_length=20)),
                ('process', models.CharField(blank=True, db_column='Process', max_length=100)),
                ('area', models.CharField(blank=True, db_column='Area', max_length=20)),
            ],
        ),
    ]
